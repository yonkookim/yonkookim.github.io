{"version":3,"sources":["data.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","DivBox","styled","div","H4","h4","props","colorrr","Stock","stock","Detail","useState","alert","setAlert","useEffect","console","log","timer2s","setTimeout","clearTimeout","inputVal","setInputVal","history","useHistory","useParams","idProduct","shoes","find","v","className","onChange","e","target","value","src","width","onClick","setStock","goBack","Product","srci","App","Data","setShoes","path","exact","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","Nav","Link","to","NavDropdown","Item","Divider","class","role","map","i","axios","get","then","result","data","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3d90407.chunk.js","sourcesContent":["export default [\r\n    {\r\n        id: 0,\r\n        title:\"White and Black\",\r\n        content: \"Born in France\",\r\n        price: 120000\r\n    },\r\n    {\r\n        id: 1,\r\n        title: \"Red Knit\",\r\n        content: \"Born in Seoul\",\r\n        price: 110000\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"Grey Yordan\",\r\n        content: \"Born in the States\",\r\n        price: 130000\r\n    }\r\n]","import axios from 'axios';\r\nimport React, {useEffect, useState} from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components'\r\nimport './Detail.scss'\r\n\r\n//---------------------styled component 만들기 -------------------------\r\n // : 클래스 명을 아낄 수 있다는 장점이 있다. (대단한 기능은 X)\r\n//  but 클래스 활용할 때도 css모듈화 를 사용하면 역시 해결됨..\r\nlet DivBox= styled.div`\r\npadding : 20px;\r\n`;\r\nlet H4= styled.h4`\r\nfont-size: 25px;\r\ncolor : ${props => props.colorrr}; \r\n//문법을 꼭 이렇게 작성! 음 신기하네... 적은 수의 컴퍼넌트로 다양하게 만들 수 O\r\n`;\r\n//--------------------------------------------------------------------\r\n\r\n\r\nfunction Detail(props){\r\n  //-------------------------------useEffect() -------------------------------\r\n  // : Component가 mount 되었을 때 실행될 함수를 정의하는 함수 or\r\n  // : Component가 update 될 때 실행될 함수를 정의하는 함수\r\n  // : class의 ComponentDidMount() 와 동일, 여러개 작성하면 순차적으로 실행\r\n\r\n  let [alert, setAlert]= useState(true);\r\n    useEffect(()=>{\r\n      console.log(\"okay\");\r\n\r\n      let timer2s= setTimeout(()=>{  //-------- setTimeout() 와 변수의 활용 --------\r\n        setAlert(false)\r\n        // return function unMountWill(){}: Component가 사라질때 실행할 함수를 작성\r\n        return ()=>{clearTimeout(timer2s)} // 함수를 변수에 담아두니 이럴때 쓰이네\r\n        // clearTimeout()는 굳이 왜? : 2초되기 전 Component가 사라질 때 발생할 오류제거\r\n      }, 2000)\r\n    }, [alert]); \r\n    // 오호.. useEffect의 두번쨰 매개변수 자리는 함수가 실행 될 조건을 넣을 수 O\r\n    // [alert]를 적은 의미 : state변수 alert가 변할 때에만 실행되도록 해주세요.\r\n    // 변수는 alert하나 뿐 아니라 , 로 복수의 배열값들로 넣어 줄 수 O\r\n    // 이 기능을 이용한 trick : []만 적으면 페이지가 열린순간만 실행되고 이후 X\r\n\r\n    \r\n    \r\n    let[inputVal, setInputVal]= useState();\r\n\r\n    //---------------------------------------------------------------------------\r\n\r\n    let history= useHistory(); //변수 history에 page의 사용 기록을 모두 저장\r\n    let {id} = useParams(); //useParams()는 자료형 객체를 반환, 변수 id로 그 정보를 저장\r\n    //이때 useParams()가 반환하는 정보는 parameter : url에서 / 뒤에 오는 정보\r\n    //이를 활용하면 url의 변화에 따른 content 변화를 조절할 수 O\r\n\r\n    //----------------------------apple id 오류 수정-----------------------------\r\n    // let idProduct= props.shoes.find(function(v){\r\n    //   return v.id == id;\r\n    // })\r\n    let idProduct= props.shoes.find(v=>v.id == id);\r\n    //----------------------------------------------------------------------\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <DivBox> <H4 colorrr=\"blue\">상세 페이지</H4> </DivBox>\r\n\r\n      {/* ---------input태그를 활용하여 재 랜더링(업데이트) 살펴보기-----------\r\n        : input태그에 무언가 입력 될 때 마다 재 랜더링 된다.\r\n        재 랜더링(업데이트) 될 때마다 useEffect() 역시 반복 실행된다. */}\r\n      <input onChange={(e)=>{\r\n        setInputVal(e.target.value)\r\n      }}/>\r\n      <br />\r\n      {inputVal}\r\n      {/* ------------------ alert에 변수를 이용하여 timer 걸기 ------------------- */}\r\n      { \r\n        alert === true\r\n        ? (<div className=\"my-alert\">\r\n        <p>재고가 얼마 남지 않았습니다.</p>\r\n      </div>) // ? 다음 () 작성 하니 오류가 없어지네 ㅇㅋ\r\n        : null\r\n      }\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img src=\"https://codingapple1.github.io/shop/shoes1.jpg\" width=\"100%\" />\r\n        </div>\r\n        <div className=\"col-md-6 mt-4\">\r\n\r\n          {/* -----------------------------미션------------------------------\r\n          상품정렬을 가격순, 이름순 등으로 바꾸면 shoes의 값들의 index가 바뀌게 될텐데\r\n          이때 상품 상세설명은 영향을 받지 않아야 한다!!\r\n          then, 상품detail에서 shoes[id](인덱스로 단순접근)로 단순 접근하면 X */}\r\n\r\n        {/* -------------------------koo의 id 오류 수정 ---------------------------- */}\r\n          {/* <h4 className=\"pt-5\">{\r\n            props.shoes.map((v,i)=>{\r\n              if(props.shoes[i].id==id){\r\n                return props.shoes[i].title\r\n              };\r\n            })};\r\n          </h4> */}\r\n        {/* ------------------------------------------------------------------- */}\r\n\r\n\r\n        {/* --------------------------apple의 id 오류 수정------------------------ */}\r\n\r\n          <h4 className=\"pt-5\">{idProduct.title}\r\n        {/* ------------------------------------------------------------------- */}\r\n          </h4>\r\n          <p>{props.shoes[id].content}</p>\r\n          <p>{props.shoes[id].price}</p>\r\n          <Stock stock={props.stock}/>\r\n\r\n          <button className=\"btn btn-danger\" onClick={()=>{\r\n            props.setStock([9,11,12]) //이 부분 기능개발 필요\r\n          }}>주문하기</button> \r\n          <button className=\"btn btn-danger\" onClick={()=>{history.goBack();}}>뒤로가기</button> \r\n        </div>\r\n      </div>\r\n  </div>  \r\n  )\r\n};\r\n\r\nfunction Stock(props){\r\n  return (\r\n<p>재고 : {props.stock[0]}</p> // 이부분도 기능개발 필요\r\n  )\r\n}\r\n\r\nexport default Detail ","/*eslint-disable*/\nimport React, {useState} from 'react'\nimport './App.css';\nimport { Button, Navbar, Nav, NavDropdown, Container } from 'react-bootstrap';\nimport Data from './data.js'\nimport {Route, Link, Switch} from 'react-router-dom'\nimport Detail from './Detail'\nimport axios from 'axios'\n\n\nfunction App() {\n  //--------Data와 같은 중요한 데이타는 App.js에 보관해두는 것이 국룰-----------\n  // : 상위컴퍼넌트에서 하위컴퍼넌트로 props를 통해 정보를 전하는 것이 좋다\n  let [shoes, setShoes]= useState(Data);\n  let [stock, setStock]= useState([10,11,12]);\n  console.log(shoes);\n  \n  return (\n    <div className=\"App\">\n{/* ---------------------------------nav bar---------------------------------- */}\n      <Switch>\n        <Route path=\"/\" exact> \n          <Navbar bg=\"light\" expand=\"lg\">\n            <Container>\n              <Navbar.Brand href=\"#home\">ShoeShop</Navbar.Brand>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"me-auto\">\n                  <Nav.Link> <Link to=\"/\"> Home </Link> </Nav.Link>\n                  <Nav.Link> <Link to=\"/detail\"> Detail </Link> </Nav.Link>\n                  <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                  </NavDropdown>\n                </Nav>\n              </Navbar.Collapse>\n            </Container>\n          </Navbar>\n{/* -------------------------------Jumbotron----------------------------------- */}\n          <div class=\"jumbotron\">\n            <h1 class=\"display-4\">20% season off</h1>\n            <p class=\"lead\">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>\n            <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>\n            <p class=\"lead\">\n              <a class=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Learn more</a>\n            </p>\n          </div>\n{/* --------------------------------Product------------------------------- */}\n{/* 부트스트랩 문법으로 화면상에서 가로로 3등분을 시켜줌  */}\n          <div className=\"container\">\n            <div className=\"row\">\n              {\n                shoes.map((v, i)=>{\n                  return <Product srci={i} shoes={shoes[i]} key={i}/>; \n                  //★★★★ 이부분 중요 ★★★★\n                })\n              }\n            </div>\n\n  {/* ------------------------------- axios ---------------------------------- */}\n\n  {/* axios와 fetch의 차이점 \n  : 호환성의 차이도 있지만 현재 axios가 불러온 자료를 보면 JSON(자료형)으로서\n  실제 확인해보면 key에도 모두 \"\" 가 있는 것을 확인할 수 O (url치고 들어가서..)\n  그런데 이때 JSON자료형을 불러오지만 \"\"를 알아서 제거하여 객체형 자료로 이쁘게 불러옴.*/}\n\n            <button className=\"btn btn-primary\" onClick={()=>{\n\n            // axios.post('서버 url', { id: 'cjsan2', pw: 1234})//서버로 정보전달         \n\n              axios.get('https://codingapple1.github.io/shop/data2.json')\n              .then((result)=>{\n                console.log(\"success\")\n                console.log(result.data) //매개변수 result뒤에 .data하면 자료만 딱\n  //----- skill!!! ...shoes : []를 벗긴 shoes, [...shoes]: 벗겼다 씌운 복사체 ------\n                setShoes([...shoes, ...result.data]); //물론 변수에 담고 push써도 가능\n              })\n              .catch(()=>{\n                console.log(\"failed\")\n              });\n            }}>더보기</button>\n          </div>\n        </Route>\n\n{/* ------ 하위 컴퍼넌트에서 필요한 정보를 Detail 컴퍼넌트를 매개로 props로 전달 ------ */}\n      <Route path=\"/detail/:id\"> <Detail shoes={shoes} stock={stock} setStock={setStock}/> </Route>\n\n      <Route path=\"/\"> <h2>not found</h2> </Route>\n      </Switch>\n\n    </div>\n  );\n}\n\n//--------------------------- product Component -----------------------------\nfunction Product(props){\n  return(\n  <div className=\"col-md-4\">\n  <img src={\"http://codingapple1.github.io/shop/shoes\"+(props.srci + 1)+\".jpg\"} width=\"100%\" />\n  <h4>{props.shoes.title}</h4>\n  <p>{props.shoes.content}</p>\n  <p>{props.shoes.price}</p>\n</div>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}